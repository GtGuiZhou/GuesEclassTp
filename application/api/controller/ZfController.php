<?php
/**
 * Created by PhpStorm.
 * User: gtguizhou
 * Date: 19-3-26
 * Time: 下午8:44
 */

namespace app\api\controller;


use app\common\controller\ApiBase;
use app\common\model\UserModel;
use app\common\model\ZfModel;
use think\exception\ValidateException;
use zf\Main;

class ZfController extends ApiBase
{
    protected $limitAction = ['only' => 'indexAll,index'];
    /**
     * @var Main
     */
    private $main;

    protected function initialize()
    {
        $this->model = new ZfModel();
        $this->main = new Main();
        parent::initialize(); // TODO: Change the autogenerated stub
    }

    public function login()
    {
        $user = $this->user();
        $this->main->login(input('act'), input('pwd'), input('code'));
        // 登录成功保存账号
        UserModel::where('id', $user['id'])
            ->update([
                'zf_act' => input('act'),
                'zf_pwd' => input('pwd')
            ]);

        $act = input('act');
        // 更新用户成绩和课表
        $model = ZfModel::where('user_id' , $user['id'])->find();
        $timetable = $this->main->timetable($act);
        $scoreReport = $this->main->scoreReport($act);
        if ($model){
            $model->isUpdate(true)->save([
                'time_table' => $timetable,
                'score_report' => $scoreReport
            ]);
        } else {
            ZfModel::create([
                'user_id'   => $user['id'],
                'time_table' => $timetable,
                'score_report' => $scoreReport
            ]);
        }
        return success();
    }

    public function checkCode()
    {
        return response($this->main->checkCode())->header('Content-Type', 'image/gif');
    }

    public function update()
    {
        $user = $this->user();
        if (empty($user['zf_act']) || empty($user['zf_pwd'])){
            throw new ValidateException('还未有绑定教务系统');
        }
        $this->main->login($user['zf_act'],$user['zf_pwd'],input('code'));
        $act = $user['zf_act'];
        // 更新用户成绩和课表
        $model = ZfModel::where('user_id' , $user['id'])->find();
        $timetable = $this->main->timetable($act);
        $scoreReport = $this->main->scoreReport($act);
        if ($model){
            $model->isUpdate(true)->save([
                'time_table' => $timetable,
                'score_report' => $scoreReport
            ]);
        } else {
            ZfModel::create([
                'user_id'   => $user['id'],
                'time_table' => $timetable,
                'score_report' => $scoreReport
            ]);
        }

        return success();
    }

    public function timetable()
    {
        $user = $this->user();
        $model = ZfModel::where('user_id', $user['id'])->field(['time_table'])->find();
        return success($model);
    }

    public function scoreReport()
    {
        $user = $this->user();
        $model = ZfModel::where('user_id', $user['id'])->field('score_report')->find();
        return success($model);
    }
}   